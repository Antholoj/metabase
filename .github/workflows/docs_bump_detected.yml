name: Docs Bump Detected

on:
  pull_request:
    paths:
      - 'docs/**'

jobs:
  push_workflow_to_docs_metabase_github_io_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Add additional steps here to process docs changes
      - name: Print changed docs files
        run: |
          echo "A change in the docs directory was detected."

      - name: Prepare to trigger slurp_branches workflow in metabase/docs.metabase.github.io
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BRANCH_NAME=${{ github.head_ref }}" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          fi

      - name: Get workflow id for process_docs_changes.yml
        env:
          TOKEN: ${{ secrets.METABASE_AUTOMATION_USER_TOKEN }}
        run: |
          WORKFLOW_ID=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/metabase/docs.metabase.github.io/actions/workflows | \
            jq -r '.workflows[] | select(.name == ".github/workflows/process_docs_changes.yml") | .id')
          echo "WORKFLOW_ID=$WORKFLOW_ID" >> $GITHUB_ENV

      - name: Read Workflow ID
        run: echo $WORKFLOW_ID

      # Trigger the repository_dispatch event in the target repo
      - name: Trigger Workflow in `metabase/docs.metabase.github.io`
        env:
          TOKEN: ${{ secrets.METABASE_AUTOMATION_USER_TOKEN }}
        run: |
          echo $BRANCH_NAME
          echo "Triggering workflow in metabase/docs.metabase.github.io with branch: $BRANCH_NAME"
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${TOKEN}" \
            "https://api.github.com/repos/metabase/docs.metabase.github.io/$WORKFLOW_ID/dispatches" \
            -d "{\"event_type\": \"trigger-workflow\",
                 \"ref\": \"$BRANCH_NAME\"
                 \"client_payload\": {\"branch\": \"$BRANCH_NAME\"}}"
